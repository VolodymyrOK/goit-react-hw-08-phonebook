{"version":3,"file":"static/js/567.f18a59af.chunk.js","mappings":"+TAuBaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIC,SAAA,EACvCC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,KACZN,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZR,SAAA,EAEFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmBX,UAC9CC,EAAAA,EAAAA,KAACW,EAAAA,EAAgB,OAEnBX,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACf,UAAU,KAAKgB,QAAQ,KAAId,SAAC,aAGxCJ,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACL,UAAU,OAAOiB,YAAU,EAACC,SA7BlB,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAChC3B,GACE4B,EAAAA,EAAAA,IAAS,CACPC,KAAMJ,EAAKK,IAAI,YACfC,MAAON,EAAKK,IAAI,SAChBE,SAAUP,EAAKK,IAAI,cAGzB,EAmB+DpB,GAAI,CAAEuB,GAAI,GAAI3B,SAAA,EACrEJ,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE9B,SAAA,EACzBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGhC,UAChBC,EAAAA,EAAAA,KAACgC,EAAAA,EAAS,CACRC,aAAa,WACbX,KAAK,WACLY,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,YAAY,WACZC,WAAS,OAGbvC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGhC,UAChBC,EAAAA,EAAAA,KAACgC,EAAAA,EAAS,CACRE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,YAAY,gBACZhB,KAAK,QACLW,aAAa,aAGjBjC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGhC,UAChBC,EAAAA,EAAAA,KAACgC,EAAAA,EAAS,CACRE,UAAQ,EACRC,WAAS,EACTb,KAAK,WACLe,MAAM,WACNC,YAAY,WACZE,KAAK,WACLJ,GAAG,WACHH,aAAa,uBAInBjC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLD,KAAK,SACLL,WAAS,EACTtB,QAAQ,YACRV,GAAI,CAAEuB,GAAI,EAAGgB,GAAI,GAAI3C,SACtB,aAGDC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,WAAS,EAACe,eAAe,WAAU5C,UACvCC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACG,MAAI,EAAA/B,UACRC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CACH/C,UAAWgD,EAAAA,GACXC,GAAG,SACHjC,QAAQ,QACRV,GAAI,CAAE4C,MAAO,SAAUhD,SACxB,iDASf,E,UClHe,SAASiD,IACtB,OACErD,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAAAlD,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACR,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { register } from 'redux/auth/auth.operations';\nimport {\n  Container,\n  Avatar,\n  Box,\n  CssBaseline,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  Button,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\n// import * as Yup from 'yup';\n// const SignupSchema = Yup.object().shape({\n//   email: Yup.string().email('Invalid email.').required('Required'),\n//   password: Yup.string().min(8).required('Required'),\n//   name: Yup.string().min(2).max(50).required('Required'),\n// });\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    dispatch(\n      register({\n        name: data.get('username'),\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 3,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                placeholder=\"Username\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/login\"\n                variant=\"body2\"\n                sx={{ color: 'white' }}\n              >\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","register","name","get","email","password","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","id","label","placeholder","autoFocus","type","Button","mb","justifyContent","Link","RouterLink","to","color","Register","Helmet"],"sourceRoot":""}